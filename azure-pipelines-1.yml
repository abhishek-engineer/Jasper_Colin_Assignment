# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: 'Default'

steps:
# Step 1: Use Python 3.10
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10'
    addToPath: true

# Step 2: Verify Python installation
- script: |
    python --version
    pip --version
  displayName: 'Verify Python Version'

# Step 3: Upgrade pip, setuptools, and wheel
- script: |
    python -m pip install --upgrade pip setuptools wheel
  displayName: 'Upgrade pip, setuptools, wheel'

# Step 4: Install dependencies safely (legacy resolver)
- script: |
    pip install --upgrade selenium
    pip install -r requirements.txt --use-deprecated=legacy-resolver
  displayName: 'Install Dependencies Safely'

# Step 5: Run PyTest tests and always generate JUnit XML
- script: |
    pytest --maxfail=1 --disable-warnings --junitxml=reports/results.xml || exit 0
  displayName: 'Run PyTest Tests'
  continueOnError: true  # allows next steps to run even if tests fail

# Step 6: Publish test results in DevOps UI
- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/reports/results.xml'
    testResultsFormat: 'JUnit'
    failTaskOnFailedTests: true  # this ensures failed tests are shown

# Step 7: Publish artifact (only reports folder)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'reports'
    ArtifactName: 'PyTest_Reports'
    publishLocation: 'Container'